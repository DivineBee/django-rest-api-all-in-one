name: Deploy to Dev Server

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Deploy
      uses: easingthemes/ssh-deploy@main
      env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          ARGS: "-rltgoDzvO --delete"
          SOURCE: ""
          REMOTE_HOST: ${{ secrets.SSH_HOST }}
          REMOTE_USER: ${{ secrets.SSH_USER }}
          TARGET: /var/www/ci.dev/
          EXCLUDE: ".env.dev"

    - name: Rebuild and restart containers
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: 22
        script: |
          echo "SECRET_KEY=${{secrets.SECRET_KEY}}" >> .env
          echo "ALLOWED_HOSTS=${{secrets.ALLOWED_HOSTS}}" >> .env
          echo "DEBUG=${{secrets.DEBUG}}" >> .env
          echo "POSTGRES_PASSWORD=${{secrets.POSTGRES_PASSWORD}}" >> .env
          echo "POSTGRES_NAME=${{secrets.POSTGRES_NAME}}" >> .env
          echo "POSTGRES_USER=${{secrets.POSTGRES_USER}}" >> .env
          echo "POSTGRES_DB=${{secrets.POSTGRES_DB}}" >> .env
          echo "DATABASE_URL=${{secrets.DATABASE_URL}}" >> .env
          
          cd /var/www/ci.dev/
          docker-compose -f docker-compose-ci.yml down
          docker-compose -f docker-compose-ci.yml up -d --build
          docker-compose -f docker-compose-ci.yml exec -T main python manage.py makemigrations
          docker-compose -f docker-compose-ci.yml exec -T main python manage.py migrate
