name: Django CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  docker:
    timeout-minutes: 10
    runs-on: ubuntu-latest

    steps:
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
            key: ${{ secrets.SSH_PRIVATE_KEY }}
            known_hosts: 'just-a-placeholder-so-we-dont-get-errors'
            
      - name: Deploy with rsync
        run: rsync -n ./dist/ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:./project-python/django-rest-api-all-in-one/

      - name: Adding Known Hosts
        run: ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts
        
      - name: Environment set
      - run: |
          echo "SECRET_KEY=${{secrets.SECRET_KEY}}" >> .env
          echo "ALLOWED_HOSTS=${{secrets.ALLOWED_HOSTS}}" >> .env
          echo "DEBUG=${{secrets.DEBUG}}" >> .env
          echo "POSTGRES_PASSWORD=${{secrets.POSTGRES_PASSWORD}}" >> .env
          echo "POSTGRES_NAME=${{secrets.POSTGRES_NAME}}" >> .env
          echo "POSTGRES_USER=${{secrets.POSTGRES_USER}}" >> .env
          echo "POSTGRES_DB=${{secrets.POSTGRES_DB}}" >> .env
          echo "DATABASE_URL=${{secrets.DATABASE_URL}}" >> .env
          cat .env
        
      - name: Checkout
        uses: actions/checkout@v1

      - name: Start containers
        run: docker-compose -f --env-file .env "docker-compose-ci.yml" up -d --build

      - name: Stop containers
        if: always()
        run: docker-compose -f "docker-compose-ci.yml" down
